name: Release

on:
  push:
    paths:
      - 'gentoo/**'
      - 'ubi8/**'
      - 'ubi9/**'
  pull_request:

# write permission implies read permission.
permissions:
  # for create release tag
  contents: write
  # for push to ghcr.io registry.
  packages: write
  

jobs:
  ubi8:
    name: Build ubi8 image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ubi-devcontainer
      REGISTRY: ghcr.io
    steps:

    - uses: actions/checkout@v4

    - name: Log in to Red Hat Registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: registry.redhat.io
        username: ${{ secrets.REGISTRY_REDHAT_IO_USER }}
        password: ${{ secrets.REGISTRY_REDHAT_IO_PASSWORD }}
    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ github.actor }}/${{ env.IMAGE_NAME }}
        tags: latest ubi8 ${{ github.sha }}
        containerfiles: |
          ./ubi8/Containerfile

    - name: Push to GitHub Container Repository
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

  ubi9:
    name: Build ubi9 image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ubi-devcontainer
      REGISTRY: ghcr.io
    steps:

    - uses: actions/checkout@v4

    - name: Log in to Red Hat Registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: registry.redhat.io
        username: ${{ secrets.REGISTRY_REDHAT_IO_USER }}
        password: ${{ secrets.REGISTRY_REDHAT_IO_PASSWORD }}
    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ github.actor }}/${{ env.IMAGE_NAME }}
        tags: latest ubi9 ${{ github.sha }}
        containerfiles: |
          ./ubi9/Containerfile

    - name: Push to GitHub Container Repository
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
  gentoo:
    name: Build gentoo image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ubi-devcontainer
      REGISTRY: ghcr.io
    steps:

    - uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
    # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
    # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: latest gentoo ${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        
    # - name: Buildah Action
    #   id: build-image
    #   uses: redhat-actions/buildah-build@v2
    #   with:
    #     image: ${{ github.actor }}/${{ env.IMAGE_NAME }}
    #     tags: latest gentoo ${{ github.sha }}
    #     containerfiles: |
    #       ./gentoo/Containerfile

    # - name: Push to GitHub Container Repository
    #   id: push-to-ghcr
    #   uses: redhat-actions/push-to-registry@v2
    #   with:
    #     image: ${{ steps.build-image.outputs.image }}
    #     tags: ${{ steps.build-image.outputs.tags }}
    #     registry: ${{ env.REGISTRY }}
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}